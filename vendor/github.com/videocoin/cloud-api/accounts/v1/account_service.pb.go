// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: accounts/v1/account_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AccountRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              string   `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRequest) Reset()         { *m = AccountRequest{} }
func (m *AccountRequest) String() string { return proto.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()    {}
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a57b966a6f05cc7, []int{0}
}
func (m *AccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRequest.Merge(m, src)
}
func (m *AccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRequest proto.InternalMessageInfo

func (m *AccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (*AccountRequest) XXX_MessageName() string {
	return "cloud.api.account.v1.AccountRequest"
}
func init() {
	proto.RegisterType((*AccountRequest)(nil), "cloud.api.account.v1.AccountRequest")
	golang_proto.RegisterType((*AccountRequest)(nil), "cloud.api.account.v1.AccountRequest")
}

func init() { proto.RegisterFile("accounts/v1/account_service.proto", fileDescriptor_0a57b966a6f05cc7) }
func init() {
	golang_proto.RegisterFile("accounts/v1/account_service.proto", fileDescriptor_0a57b966a6f05cc7)
}

var fileDescriptor_0a57b966a6f05cc7 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xc1, 0x4e, 0xfa, 0x40,
	0x10, 0xc6, 0xd9, 0x92, 0xf0, 0xff, 0xbb, 0x07, 0x0e, 0x8d, 0x07, 0x40, 0x53, 0x91, 0x78, 0xf0,
	0xe2, 0x36, 0xe8, 0xd1, 0x93, 0x78, 0x20, 0x86, 0x03, 0x06, 0x12, 0x0f, 0x5c, 0xc8, 0xd2, 0x0e,
	0x75, 0x13, 0xda, 0xa9, 0xed, 0xb4, 0xa6, 0x6f, 0xe7, 0x91, 0xa3, 0x8f, 0x60, 0xca, 0xcd, 0xa7,
	0x30, 0x6e, 0x37, 0x1a, 0x0d, 0x21, 0x1e, 0xb8, 0xcd, 0xcc, 0xf7, 0xfb, 0xbe, 0xd9, 0xcc, 0xf2,
	0x53, 0xe9, 0x79, 0x98, 0x45, 0x94, 0xba, 0x79, 0xdf, 0x35, 0xf5, 0x3c, 0x85, 0x24, 0x57, 0x1e,
	0x88, 0x38, 0x41, 0x42, 0xfb, 0xd0, 0x5b, 0x61, 0xe6, 0x0b, 0x19, 0x2b, 0x61, 0x00, 0x91, 0xf7,
	0x3b, 0xed, 0x2d, 0xc6, 0xca, 0xd0, 0xb9, 0x08, 0x14, 0x3d, 0x66, 0x0b, 0xe1, 0x61, 0xe8, 0x06,
	0x18, 0xa0, 0xab, 0xc7, 0x8b, 0x6c, 0xa9, 0x3b, 0xdd, 0xe8, 0xca, 0xe0, 0x47, 0x01, 0x62, 0xb0,
	0x82, 0x6f, 0x0a, 0xc2, 0x98, 0x0a, 0x23, 0x1e, 0x1b, 0x51, 0xc6, 0xca, 0x95, 0x51, 0x84, 0x24,
	0x49, 0x61, 0x94, 0x1a, 0xf5, 0xe4, 0xb7, 0x95, 0x54, 0x08, 0x29, 0xc9, 0x30, 0xae, 0x80, 0xde,
	0x35, 0x6f, 0xde, 0x54, 0x6f, 0x9b, 0xc0, 0x53, 0x06, 0x29, 0xd9, 0x4d, 0x6e, 0x29, 0xbf, 0xc5,
	0xba, 0xec, 0xfc, 0x60, 0x62, 0x29, 0xdf, 0x6e, 0xf3, 0xff, 0xf8, 0x1c, 0x41, 0x32, 0x57, 0x7e,
	0xcb, 0xd2, 0xd3, 0x7f, 0xba, 0xbf, 0xf3, 0x2f, 0xdf, 0xad, 0x2f, 0xf7, 0xb4, 0xba, 0x88, 0x3d,
	0xe5, 0xf5, 0x21, 0x90, 0x7d, 0x26, 0xb6, 0xdd, 0x44, 0xfc, 0x5c, 0xd5, 0xd9, 0x4d, 0xdd, 0x27,
	0xb8, 0x54, 0x2b, 0xe8, 0xd5, 0xec, 0x19, 0xe7, 0x43, 0xa0, 0x41, 0x31, 0xfe, 0xdc, 0xbb, 0xe7,
	0xec, 0x07, 0xde, 0xb8, 0x4d, 0x40, 0x12, 0xec, 0x39, 0x77, 0xcc, 0xeb, 0x23, 0x28, 0xfe, 0x18,
	0xda, 0xdd, 0x49, 0x8d, 0xa0, 0xe8, 0xd5, 0x06, 0xad, 0x75, 0xe9, 0xb0, 0xd7, 0xd2, 0x61, 0x6f,
	0xa5, 0xc3, 0x5e, 0x36, 0x0e, 0x5b, 0x6f, 0x1c, 0x36, 0xb3, 0xf2, 0xfe, 0xa2, 0xa1, 0xbf, 0xf2,
	0xea, 0x23, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x05, 0xd4, 0x2d, 0xab, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	Get(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error)
	GetByOwner(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error)
	Create(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error)
	Key(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountKey, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) Get(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error) {
	out := new(AccountProfile)
	err := c.cc.Invoke(ctx, "/cloud.api.account.v1.AccountService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetByOwner(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error) {
	out := new(AccountProfile)
	err := c.cc.Invoke(ctx, "/cloud.api.account.v1.AccountService/GetByOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Create(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountProfile, error) {
	out := new(AccountProfile)
	err := c.cc.Invoke(ctx, "/cloud.api.account.v1.AccountService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Key(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountKey, error) {
	out := new(AccountKey)
	err := c.cc.Invoke(ctx, "/cloud.api.account.v1.AccountService/Key", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	Get(context.Context, *AccountRequest) (*AccountProfile, error)
	GetByOwner(context.Context, *AccountRequest) (*AccountProfile, error)
	Create(context.Context, *AccountRequest) (*AccountProfile, error)
	Key(context.Context, *AccountRequest) (*AccountKey, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) Get(ctx context.Context, req *AccountRequest) (*AccountProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedAccountServiceServer) GetByOwner(ctx context.Context, req *AccountRequest) (*AccountProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByOwner not implemented")
}
func (*UnimplementedAccountServiceServer) Create(ctx context.Context, req *AccountRequest) (*AccountProfile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAccountServiceServer) Key(ctx context.Context, req *AccountRequest) (*AccountKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Key not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.account.v1.AccountService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Get(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetByOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetByOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.account.v1.AccountService/GetByOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetByOwner(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.account.v1.AccountService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Create(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Key_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Key(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.account.v1.AccountService/Key",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Key(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.account.v1.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _AccountService_Get_Handler,
		},
		{
			MethodName: "GetByOwner",
			Handler:    _AccountService_GetByOwner_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AccountService_Create_Handler,
		},
		{
			MethodName: "Key",
			Handler:    _AccountService_Key_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "accounts/v1/account_service.proto",
}

func (m *AccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OwnerId) > 0 {
		i -= len(m.OwnerId)
		copy(dAtA[i:], m.OwnerId)
		i = encodeVarintAccountService(dAtA, i, uint64(len(m.OwnerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintAccountService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAccountService(dAtA []byte, offset int, v uint64) int {
	offset -= sovAccountService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovAccountService(uint64(l))
	}
	l = len(m.OwnerId)
	if l > 0 {
		n += 1 + l + sovAccountService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAccountService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAccountService(x uint64) (n int) {
	return sovAccountService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAccountService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccountService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccountService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAccountService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccountService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccountService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAccountService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAccountService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAccountService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAccountService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAccountService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAccountService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAccountService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAccountService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAccountService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAccountService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAccountService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAccountService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAccountService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAccountService = fmt.Errorf("proto: unexpected end of group")
)
